plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    //id 'androidx.navigation.safeargs.kotlin'
}
apply plugin: "de.mannodermaus.android-junit5"
android {
    compileSdk 30

    defaultConfig {
        applicationId "com.vm.smacompose"
        minSdk 21
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion kotlin_compiler_extension
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    //implementation "androidx.hilt:hilt-navigation:$hilt_navigation"

    implementation "com.google.accompanist:accompanist-coil:$accompanist_coil"
//------
    implementation "androidx.core:core-ktx:$core_ktx"
    implementation "androidx.appcompat:appcompat:$app_compat"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout"
    implementation "androidx.ui:ui-tooling:$androidx_ui"

    // we will remove these 2 dependencies later when building the compose-only nav system
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_component"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_component"

    implementation "androidx.compose.ui:ui:$compose"
    implementation "androidx.compose.foundation:foundation:$compose"
    implementation "androidx.compose.material:material:$compose"
    implementation "androidx.compose.material:material-icons-core:$compose"
    implementation "androidx.compose.material:material-icons-extended:$compose"

    implementation "androidx.navigation:navigation-compose:$nav_compose"
    implementation "androidx.constraintlayout:constraintlayout-compose:$compose_constraint"
    implementation "androidx.activity:activity-compose:$compose_activity"
    implementation "androidx.hilt:hilt-navigation:$hilt_navigation"

    //implementation "androidx.room:room-runtime:$room"
    //implementation "androidx.room:room-ktx:$room"

    implementation "androidx.datastore:datastore-preferences:$datastore"

    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_lifecycle_viewmodel"
    //-------
    implementation "com.google.dagger:hilt-android:2.37"
    kapt "com.google.dagger:hilt-compiler:2.37"
    //kapt "androidx.room:room-compiler:$room"

    //-----
    implementation "com.google.android.material:material:$material"
    implementation "com.google.dagger:hilt-android:$hilt"

    //-----
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin"

    //-----
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.okhttp3:okhttp:$okHttp"
    implementation "com.squareup.leakcanary:leakcanary-android:$leak_canary"

    //Testign
    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter"
    // Mock web server
    testImplementation"com.squareup.okhttp3:mockwebserver:$okHttp"
    // compose testing
    implementation "androidx.compose.ui:ui-test-junit4:${compose}"
}

kapt {
    correctErrorTypes true
}